import "*", as: Three, from: 'three'

export class Scene < Three.Scene
  def initialize
    super
    @bg = get_background

    this.background  = @bg
    this.environment = @bg
  end

  def get_background
    bgs = [
      '/textures/environmentMaps/0/px.jpg',
      '/textures/environmentMaps/0/nx.jpg',
      '/textures/environmentMaps/0/py.jpg',
      '/textures/environmentMaps/0/ny.jpg',
      '/textures/environmentMaps/0/pz.jpg',
      '/textures/environmentMaps/0/nz.jpg'
    ]

    cubeTextureLoader = Three.CubeTextureLoader.new
    background = cubeTextureLoader.load(bgs)
    background.encoding = Three.sRGBEncoding
    return background
  end

  def add_light
    dirLight = Three.DirectionalLight('#ffffff', 1.149).new
    dirLight.position.set(-5, 5, 2.664)
    this.add(dirLight)
  end

  def updateAllMaterials
    this.traverse do |child|
      if child.is_a? Three.Mesh and
         child.material.is_a? Three.MeshStandardMaterial

        child.material.envMap = @bg;
        child.material.envMapIntensity = 5.943;
        child.material.roughness = 1;
        return child.material.metalness = 1;
      end
    end
  end
end
